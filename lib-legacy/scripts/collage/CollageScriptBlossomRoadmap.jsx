#include "../../Include.jsx";CSGlobal.setDebugLevel(1);var APPLICATION_ROOT = '/Users/calhoun/Work/Blossom';var canvas = new CanvasGridSequence();CSGlobal.registerCanvas(canvas);canvas.setCanvasRoot(APPLICATION_ROOT);canvas.setName('blossom-roadmap.psd');canvas.setWidth(29.7); //A3canvas.setHeight(42);canvas.setCanvasOffset(0);canvas.setApplyRemainder(true)canvas.setGridGutter(0);canvas.setGridSize(5);try{  canvas.initCanvas();  canvas.setSwatchShuffle(false);  canvas.setUsingRandomCoordinate(false);  var roadmap_file = new File(canvas.getCanvasRoot() + "/blossom-004-begin-roadmap.txt");  roadmap_file.open('r');    var entries = new Array();  while (!roadmap_file.eof)  {    entries.push(JSON.parse(roadmap_file.readln()));  }  var quadCount = 0;  var quadstr = new String('');  for (var j = 0; j < entries.length; j++)  {    if (canvas.getNumberOfOpenQuads() < 1) { break; }        quadstr += entries[j]['quad']+'('+entries[j]['stack']+'); ';        for (var k = 1; k < 5; k++)    {      var m = new MarkGrid();      var mFile = new File(entries[j][('mark'+k)]);      CSGlobal.csDebug(1,mFile.name);      CSGlobal.csDebug(1,mFile.path);      m.setPalette(mFile.path);      m.setFragmentByName(mFile.name);      canvas.mark(m, canvas.quadToCoordinate(quadCount));      quadCount++;    }  }  roadmap_file.close();  var textRef = canvas.getCanvas().artLayers.add();  textRef.kind = LayerKind.TEXT;  textRef.name = 'quadnumber';    var textItemRef = canvas.getCanvas().artLayers["quadnumber"].textItem;  textItemRef.contents = quadstr;  textItemRef.justification = Justification.LEFT;  textItemRef.size = 9;  textItemRef.font = "DINCondensed";}catch (e){  $.writeln(e.message);}CSGlobal.setEnableNotifiers(false);