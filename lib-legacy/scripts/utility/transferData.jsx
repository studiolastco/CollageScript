#include "lib/Utility.jsx";#include "lib/Geometry.jsx";#include "lib/Coordinate.jsx";#include "lib/Circle.jsx";#include "lib/CollageException.jsx";#include "lib/Canvas.jsx";#include "lib/Canvas/CanvasGrid.jsx";#include "lib/Canvas/CanvasPole.jsx";#include "lib/Fragment.jsx";#include "lib/Palette.jsx";#include "lib/Palette/PaletteFile.jsx";#include "lib/Palette/PaletteFolder.jsx";#include "lib/MarkSeries.jsx";#include "lib/MarkSeries/MarkSeriesRGB.jsx";#include "lib/MarkSeries/MarkSeriesPole.jsx";#include "lib/Mark.jsx";#include "lib/Mark/MarkPole.jsx";#include "lib/Mark/MarkRGB.jsx";#include "lib/Mark/MarkCircle.jsx";#include "lib/Mark/MarkRGB/MarkRGBCorner.jsx";#include "lib/Mark/MarkRGB/MarkRGBCorner2.jsx";#include "lib/Mark/MarkRGB/MarkRGBCorner3.jsx";#include "lib/Mark/MarkRGB/MarkRGBCorner4.jsx";app.preferences.rulerUnits = Units.CM;  var APPLICATION_ROOT = '/Users/calhoun/Work/KAP';var THEFILE = '/Users/calhoun/Work/KAP/tree-003/_MG_0042.CR2';try{    // load the library    if (ExternalObject.AdobeXMPScript == undefined)     {        ExternalObject.AdobeXMPScript = new ExternalObject("lib:AdobeXMPScript");    }          var fileRef = new File(THEFILE);   var xmpFileRef = new XMPFile(fileRef.fsName, XMPConst.FILE_CAMERA_RAW, XMPConst.OPEN_FOR_UPDATE);   var xmpMeta = xmpFileRef.getXMP();      //var iter = xmpMeta.iterator(XMPConst.ITERATOR_JUST_CHILDREN, XMPConst.NS_EXIF);   //var boo = iter.next();      var v = xmpMeta.getProperty(XMPConst.NS_CAMERA_RAW, 'Whites2012');   var v = xmpMeta.setProperty(XMPConst.NS_CAMERA_RAW, 'Whites2012', '+50');   var v = xmpMeta.getProperty(XMPConst.NS_CAMERA_RAW, 'Whites2012');   CSGlobal.csDebug(1,v);      xmpFileRef.putXMP(xmpMeta);   xmpFileRef.closeFile();   fileRef.close();}catch (e){  CSGlobal.csDebug(1,e.message);}