#include "php.default.min.js";var NEWSRCDIR = '/Users/cal/Work/RGB #3/palette-300';var FFORMAT = 'psd';var myDocument = app.activeDocument;var thePath = myDocument.path;var uniqueLayers = [];CSGlobal.csDebug(1,'Active Document: ' + myDocument);for (var j = 0; j < myDocument.artLayers.length; j++)//for (var j = 0; j < 40; j++){  myDocument.activeLayer = myDocument.artLayers[j];  var theLayer = myDocument.artLayers[j];  var theLayerName = theLayer.name;  CSGlobal.csDebug(1,"\nActive Layer ("+j+"): " + theLayerName);  var patternCopied = /\s{1}copy\s{1}\d{1,}/;  var patternTestResult = patternCopied.test(theLayerName);  if (patternTestResult)  {     theLayerName = theLayerName.replace(patternCopied, '');     CSGlobal.csDebug(1,'Active Layer [copy X removed]: ' + theLayerName);  }   var patternCopied = /\s{1}copy/;  var patternTestResult = patternCopied.test(theLayerName);  if (patternTestResult)  {     theLayerName = theLayerName.replace(patternCopied, '');     CSGlobal.csDebug(1,'Active Layer [copy removed]: ' + theLayerName);  }  if (!in_array(theLayerName, uniqueLayers))  {    uniqueLayers.push(theLayerName);    //array_push(uniqueLayers, theLayerName);        var newFileName = NEWSRCDIR + '/' + theLayerName + '.' + FFORMAT;    CSGlobal.csDebug(1,'Replacement Content: ' + newFileName);    theLayer = replaceContents(newFileName);  }  else  {    CSGlobal.csDebug(1,'Already replaced: ' + theLayerName);  }}CSGlobal.csDebug(1,'Finished.');////// see http://forums.adobe.com/message/3946520 /////  ////// replace contents //////function replaceContents (newFileName) {// =======================================================var idplacedLayerReplaceContents = stringIDToTypeID( "placedLayerReplaceContents" );    var desc3 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );    desc3.putPath( idnull, new File( newFileName ) );    //var idPgNm = charIDToTypeID( "PgNm" );    //desc3.putInteger( idPgNm, 1 );executeAction( idplacedLayerReplaceContents, desc3, DialogModes.NO);return app.activeDocument.activeLayer};